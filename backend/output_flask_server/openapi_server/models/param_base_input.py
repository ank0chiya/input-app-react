from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class ParamBaseInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sort_order=None):  # noqa: E501
        """ParamBaseInput - a model defined in OpenAPI

        :param sort_order: The sort_order of this ParamBaseInput.  # noqa: E501
        :type sort_order: int
        """
        self.openapi_types = {
            'sort_order': int
        }

        self.attribute_map = {
            'sort_order': 'sort_order'
        }

        self._sort_order = sort_order

    @classmethod
    def from_dict(cls, dikt) -> 'ParamBaseInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ParamBaseInput of this ParamBaseInput.  # noqa: E501
        :rtype: ParamBaseInput
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sort_order(self) -> int:
        """Gets the sort_order of this ParamBaseInput.


        :return: The sort_order of this ParamBaseInput.
        :rtype: int
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order: int):
        """Sets the sort_order of this ParamBaseInput.


        :param sort_order: The sort_order of this ParamBaseInput.
        :type sort_order: int
        """
        if sort_order is None:
            raise ValueError("Invalid value for `sort_order`, must not be `None`")  # noqa: E501

        self._sort_order = sort_order
